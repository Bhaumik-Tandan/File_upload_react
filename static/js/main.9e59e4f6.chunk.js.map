{"version":3,"sources":["App.js","index.js"],"names":["App","acceptedFiles","a","forEach","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","workbook","XLSX","read","type","sheet_name_list","SheetNames","jsonFromExcel","utils","sheet_to_json","Sheets","fetch","process","method","body","JSON","stringify","headers","readAsArrayBuffer","align","onDrop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAsCeA,MAnCf,WAAe,4CACb,WAAiCC,GAAjC,SAAAC,EAAA,sDACED,EAAcE,QAAd,+BAAAD,EAAA,MAAsB,WAAOE,GAAP,iBAAAF,EAAA,yDAEdG,EAAS,IAAIC,WACbC,IAASF,EAAOG,mBAEtBH,EAAOI,OAAP,uCAAgB,WAAOC,GAAP,qBAAAR,EAAA,6DACVS,EAAOD,EAAEE,OAAOC,OAChBC,EAAWC,IAAKC,KAAKL,EAAM,CAAEM,KAAMV,EAAO,SAAW,WACrDW,EAAkBJ,EAASK,WAAW,GACtCC,EAAgBL,IAAKM,MAAMC,cAC7BR,EAASS,OAAOL,IALJ,SAQVM,MAAMC,oDAA4B,CACtCC,OAAQ,OACRC,KAAMC,KAAKC,UAAUT,GACrBU,QAAQ,CAAC,eAAe,sBAXV,2CAAhB,uDAeIvB,EApBgB,gCAoBJF,EAAOG,mBAAmBJ,GApBtB,+CAqBTC,EAAO0B,kBAAkB3B,GArBhB,4CAAtB,uDADF,2CADa,wBA4Bb,OACE,qBAAK4B,MAAM,SAAX,SACE,cAAC,IAAD,CAAc/B,cAAe,CAAC,OAAO,SAAUgC,OA9BrC,SAAD,wCCCfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.9e59e4f6.chunk.js","sourcesContent":["import React from \"react\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport XLSX from \"xlsx\";\nfunction App() {\n  async function handleExcelDrop  (acceptedFiles){\n    acceptedFiles.forEach(async (file) => {\n\n      const reader = new FileReader();\n      const rABS = !!reader.readAsBinaryString;\n\n      reader.onload = async (e) => {\n        var bstr = e.target.result;\n        var workbook = XLSX.read(bstr, { type: rABS ? \"binary\" : \"object\" });\n        var sheet_name_list = workbook.SheetNames[0];\n        var jsonFromExcel = XLSX.utils.sheet_to_json(\n          workbook.Sheets[sheet_name_list]\n        );\n\n      await fetch(process.env.REACT_APP_SITE, {\n        method: \"POST\",\n        body: JSON.stringify(jsonFromExcel),\n        headers:{\"Content-Type\":\"application/json\"}\n      });\n      \n    }\n      if (rABS) await reader.readAsBinaryString(file);\n      else await reader.readAsArrayBuffer(file);\n\n    });\n  };\n\n  return (\n    <div align=\"center\">\n      <DropzoneArea acceptedFiles={['.xls',\".xlsx\"]} onDrop={handleExcelDrop} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}